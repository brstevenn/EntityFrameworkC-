// <auto-generated />
using System;
using EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EntityFramework.Migrations
{
    [DbContext(typeof(HomeworkContext))]
    [Migration("20230107033541_UpdateDataTimeDefaults")]
    partial class UpdateDataTimeDefaults
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EntityFramework.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("75ec6ad2-eb0b-4aa5-90cf-a6d2d0131536"),
                            Name = "Actividades pendientes",
                            Weight = 20
                        },
                        new
                        {
                            CategoryId = new Guid("64ec6ad2-eb0b-4aa5-90cf-a6d2d0131536"),
                            Name = "Actividades personales",
                            Weight = 50
                        });
                });

            modelBuilder.Entity("EntityFramework.Models.Homework", b =>
                {
                    b.Property<Guid>("HomeworkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("PriorityHomework")
                        .HasColumnType("integer");

                    b.Property<string>("Process")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("HomeworkId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Homework", (string)null);

                    b.HasData(
                        new
                        {
                            HomeworkId = new Guid("53ec6ad2-eb0b-4aa5-90cf-a6d2d0131536"),
                            CategoryId = new Guid("75ec6ad2-eb0b-4aa5-90cf-a6d2d0131536"),
                            CreationDate = new DateTime(2023, 1, 7, 3, 35, 41, 211, DateTimeKind.Utc).AddTicks(7672),
                            PriorityHomework = 1,
                            Process = "Pending",
                            Title = "Pago de servicios"
                        },
                        new
                        {
                            HomeworkId = new Guid("42ec6ad2-eb0b-4aa5-90cf-a6d2d0131536"),
                            CategoryId = new Guid("75ec6ad2-eb0b-4aa5-90cf-a6d2d0131536"),
                            CreationDate = new DateTime(2023, 1, 7, 3, 35, 41, 211, DateTimeKind.Utc).AddTicks(7672),
                            PriorityHomework = 0,
                            Process = "Pending",
                            Title = "Terminar serie"
                        });
                });

            modelBuilder.Entity("EntityFramework.Models.Homework", b =>
                {
                    b.HasOne("EntityFramework.Models.Category", "Category")
                        .WithMany("Homework")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EntityFramework.Models.Category", b =>
                {
                    b.Navigation("Homework");
                });
#pragma warning restore 612, 618
        }
    }
}
